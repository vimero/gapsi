openapi: 3.0.2
info:
  title: Swagger Product - OpenAPI 3.0
  description: |-
    Product API
  termsOfService: http://swagger.io/terms/
  contact:
    email: ronyvillame@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://us-product-1081097839005.us-central1.run.app/api/v1
tags:
  - name: product
    description: Everything about your products
paths:
  /products:
    get:
      tags:
        - product
      summary: List product
      description: List product
      operationId: listProduct
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Invalid tag product
    post:
      tags:
        - product
      summary: Add a new product
      description: Add a new product
      operationId: addProduct
      requestBody:
        description: Create a new product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Product'
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '405':
          description: Invalid input
  /products/{productId}:
    get:
      tags:
        - product
      summary: Find product by ID
      description: Returns a single product
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          description: ID of product to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid ID product
        '404':
          description: Product not found
    put:
      tags:
        - product
      summary: Update a product
      description: ''
      operationId: updateProductAllow
      parameters:
        - name: productId
          in: path
          description: ID of product that needs to be updated
          required: true
          schema:
            type: string
        - name: description
          in: query
          description: Description of product that needs to be updated
          schema:
            type: string
        - name: model
          in: query
          description: Model of product that needs to be updated
          schema:
            type: string
      responses:
        '405':
          description: Invalid input
    delete:
      tags:
        - product
      summary: Delete a product
      description: Delete a product
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          description: Product id to delete
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid product value
components:
  schemas:
    Product:
      required:
        - name
        - description
        - model
        - price
      type: object
      properties:
        id:
          type: string
          example: ABCDE12345
        name:
          type: string
          example: Computer2024
        description:
          type: string
          example: New computer 
        price:
          type: number
          format: decimal
          example: 10.20
        model:
          type: string
          example: Model 2024
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Product:
      description: Product object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
